{"version":3,"sources":["app/app.js","app/functions.js","app/initialize.js","app/model.js"],"names":["Cell","view","attrs","mdl","cell","m","class","isAlive","style","fontSize","width","size","height","flex","onclick","isRunning","board","coords","Board","Number","oninit","Object","keys","map","coord","key","Toolbar","e","GameOfLife","log","v","console","makeKey","siblingCoords","within","limit","includes","toSiblingModel","acc","sibling","calcSiblings","sibCoords","sib","filter","reduce","makeCell","idx","Math","floor","siblings","value","cells","makeBoardFromSize","calculateCell","cellsAlive","length","updateSiblings","runGOL","updateCells","randomizeCells","randomCells","sort","random","slice","createSeed","document","addEventListener","root","body","mount","model","Stream","turn","restart"],"mappings":"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","file":"docs/app.js","sourcesContent":["import {\n  log,\n  makeBoardFromSize,\n  updateCells,\n  createSeed,\n  runGOL\n} from \"./functions.js\"\nimport { restart } from \"./model.js\"\n\nconst Cell = {\n  view: ({ attrs: { mdl, cell } }) => {\n    return m(\".cell\", {\n      class: cell.isAlive ? \"alive\" : \"dead\",\n      style: {\n        fontSize: `${mdl.width() / mdl.size() / 2}px`,\n        height: `${mdl.width() / mdl.size() / 2}px`,\n        flex: `1 1 ${mdl.width() / mdl.size()}px`\n      },\n      onclick: () => {\n        mdl.isRunning(mdl.isRunning())\n        mdl.board[cell.coords].isAlive = !cell.isAlive\n        updateCells(mdl)\n      }\n    })\n  }\n}\n\nconst Board = ({ attrs: { mdl } }) => {\n  makeBoardFromSize(mdl, Number(mdl.size()))\n  return {\n    oninit: ({ attrs: { mdl } }) => createSeed(mdl),\n    view: ({ attrs: { mdl } }) => {\n      return m(\n        \".board\",\n        { style: { width: `${mdl.width()}px` } },\n        Object.keys(mdl.board).map((coord) => {\n          let cell = mdl.board[coord]\n          return m(Cell, { key: cell.key, cell, mdl })\n        })\n      )\n    }\n  }\n}\n\nconst Toolbar = {\n  view: ({ attrs: { mdl } }) =>\n    m(\".toolbar\", [\n      m(\"button.btn\", { onclick: (e) => restart(mdl) }, \"New Game\"),\n      m(\"button.btn\", { onclick: (e) => updateCells(mdl) }, \"Next\"),\n      m(\n        \"button.btn\",\n        {\n          onclick: (e) => {\n            mdl.isRunning(!mdl.isRunning())\n            runGOL(mdl)\n          }\n        },\n        \"Start\"\n      )\n    ])\n}\n\nconst GameOfLife = {\n  view: ({ attrs: { mdl } }) => {\n    return m(\".container\", [\n      m(Toolbar, { mdl }),\n      m(Board, {\n        mdl\n      })\n    ])\n  }\n}\n\nexport default GameOfLife\n","import { compose, range, values, without } from \"ramda\"\n// export const boardSizes` = filter((n) => n % 3 == 0, range(30, 60))\n\nexport const log = (m) => (v) => {\n  console.log(m, v)\n  return v\n}\n\nexport const makeKey = (coords) => `${coords[0]}-${coords[1]}`\n\nconst siblingCoords = [\n  [-1, 0],\n  [-1, 1],\n  [0, 1],\n  [1, 1],\n  [1, 0],\n  [1, -1],\n  [0, -1],\n  [-1, -1]\n]\n\nconst within = (limit) => (coords) =>\n  !(coords.includes(limit) || coords.includes(-1))\n\nconst toSiblingModel = (acc, sibling) => {\n  acc[sibling] = false\n  return acc\n}\n\nconst calcSiblings = (limit) => (sibCoords) => (coords) =>\n  sibCoords\n    .map((sib) => [sib[0] + coords[0], sib[1] + coords[1]])\n    .filter(within(limit))\n    .reduce(toSiblingModel, {})\n\nconst makeCell = (mdl) => (size) => (idx) => {\n  let coords = [idx % size, Math.floor(idx / size)]\n  let siblings = calcSiblings(size)(siblingCoords)(coords)\n  let cell = {\n    key: idx,\n    value: \"\",\n    isAlive: false,\n    coords,\n    siblings\n  }\n  mdl.board[coords] = cell\n\n  mdl.cells[coords] = cell\n  return mdl\n}\n\nexport const makeBoardFromSize = (mdl, size) => {\n  mdl.size(size)\n  return range(0, size * size).map(makeCell(mdl)(size))\n}\n\nexport const calculateCell = (mdl) => {\n  Object.keys(mdl.board).map((cell) => {\n    let cellsAlive = without([false], values(mdl.board[cell].siblings)).length\n    if (cellsAlive <= 2) {\n      mdl.board[cell].isAlive = false\n      mdl.cells[cell].isAlive = false\n    }\n\n    if ([2, 3].includes(cellsAlive)) {\n      mdl.board[cell].isAlive = true\n      mdl.cells[cell].isAlive = true\n    }\n\n    if (cellsAlive > 3) {\n      mdl.board[cell].isAlive = false\n      mdl.cells[cell].isAlive = false\n    }\n\n    if (cellsAlive == 3) {\n      mdl.board[cell].isAlive = true\n      mdl.cells[cell].isAlive = true\n    }\n  })\n  return mdl\n}\n\nexport const updateSiblings = (mdl) => {\n  Object.keys(mdl.board).map((cell) =>\n    Object.keys(mdl.board[cell].siblings).map(\n      (sibling) =>\n        (mdl.board[cell].siblings[sibling] = mdl.board[sibling].isAlive)\n    )\n  )\n\n  return mdl\n}\n\nexport const runGOL = (mdl) => {\n  // if (mdl.isRunning()) {\n  // setTimeout(() => {\n  // console.log(\"model\", mdl)\n  // return runGOL(\n  updateCells(mdl)\n  // )\n  // }, 1000)\n  // } else {\n  return mdl\n  // }\n}\n\nconst randomizeCells = (mdl) => {\n  let randomCells = Object.keys(mdl.board)\n    .sort(() => 0.5 - Math.random())\n    .slice(0, 10)\n\n  randomCells.map((cell) => (mdl.board[cell].isAlive = true))\n\n  return mdl\n}\n\nexport const updateCells = compose(calculateCell, updateSiblings)\n\nexport const createSeed = compose(updateSiblings, randomizeCells)\n","import GameOfLife from \"./app.js\"\nimport model from \"./model.js\"\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const root = document.body\n  m.mount(root, { view: () => m(GameOfLife, { mdl: model }) })\n})\n","const model = {\n  isRunning: Stream(false),\n  cells: {},\n  turn: Stream(true),\n  board: [],\n  size: Stream(30),\n  width: Stream(800)\n}\n\nexport const restart = (mdl) => {\n  mdl.isRunning = Stream(false)\n  mdl.size(null)\n  mdl.width(800)\n  mdl.turn(true)\n}\n\nexport default model\n"]}